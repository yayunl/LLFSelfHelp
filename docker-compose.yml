version: "3.3"

services:
  web:
#    build:
#      context: .
#      dockerfile: ./compose/dev/django/Dockerfile
    image: llfadmin-dev
    command: /start
#    command: tail -f /dev/null
#    command: python3 manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    env_file:
      - env/.env.dev
    depends_on:
      - redis
      - db_dev
    networks:
      - backend
    volumes:
      - ./app:/app

  worker:
    image: llfadmin-dev
#    command: celery -A suorganizer worker -l info -P solo
    command: /start-celeryworker
#    command: tail -f /dev/null
    env_file:
      - env/.env.dev
    depends_on:
      - redis
      - db_dev
    volumes:
      - ./app:/app
    networks:
      - backend

  beat:
    image: llfadmin-dev
#    command: celery -A suorganizer beat -l info
    command: /start-celerybeat
#    command: tail -f /dev/null
    env_file:
      - env/.env.dev
    depends_on:
      - redis
      - db_dev
    volumes:
      - ./app:/app
    networks:
      - backend


#  flower:
#    image: llfadmin-dev
#    command: /start-flower
#    volumes:
#      - ./app:/app
#    env_file:
#      - .env.dev
#    ports:
#      - 5555:5555
#    depends_on:
#      - redis
#      - db_dev

  db_dev:
    image: postgres:12.0-alpine
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=llfdb_dev
    ports:
      - 5436:5432
    networks:
      - backend
    volumes:
      - ./compose/dev/django/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:latest
    ports:
      - 6380:6379
    networks:
      - backend

networks:
  backend:
